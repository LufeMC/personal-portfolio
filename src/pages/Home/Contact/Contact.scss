@function pow($number, $exp) {
    $value: 1;
    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    } @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }
    @return $value;
}

@function fact($number) {
    $value: 1;
    @if $number > 0 {
        @for $i from 1 through $number {
            $value: $value * $i;
        }
    }
    @return $value;
}

@function pi() {
    @return 3.14159265359;
}

@function rad($angle) {
    $unit: unit($angle);
    $unitless: $angle / ($angle * 0 + 1);
    // If the angle has 'deg' as unit, convert to radians.
    @if $unit == deg {
        $unitless: $unitless / 180 * pi();
    }
    @return $unitless;
}

@function sin($angle) {
    $sin: 0;
    $angle: rad($angle);
    // Iterate a bunch of times.
    @for $i from 0 through 10 {
        $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
    }
    @return $sin;
}

@function cos($angle) {
    $cos: 0;
    $angle: rad($angle);
    // Iterate a bunch of times.
    @for $i from 0 through 10 {
        $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
    }
    @return $cos;
}

@mixin shade($type, $color: #3498db, $borderColor: #fff, $depth: 20, $angle: 135deg, $long: false, $fade: false) {
    $angle: ($angle - 90);
    $x: 1.1 * cos($angle) + 0px;
    $y: 1.1 * sin($angle) + 0px;
    $darken: (lightness($color) / $depth)/2;
    $opacify: 0;
    $shadow: ();

    @if $long == true {
        $darken: 0;
    }

    @if $fade == true {
        $opacify: (opacity($color) / $depth);
        // added this for rendering in some browsers, remove if you like.
        @include translateZ(0);
    }

    @for $i from 1 through $depth {
        $shadow: $shadow,
            $i *
                $x
                $i *
                $y
                0
                hsla(hue($color), saturation($color), (lightness($color) - ($i * $darken)), 1 - ($i * $opacify));
    }
    #{$type}-shadow: 1.5px 1.5px 0 $borderColor, 0px 1.5px 0 $borderColor, -1.5px -1.5px 0 $borderColor,
        -1.5px -1.5px 0 $borderColor, -1.5px 1.5px 0 $borderColor, 1.5px -1.5px 0 $borderColor, $shadow;
}

//mixin to provide just a basic outline for the text
@mixin outline($color: #fff) {
    text-shadow: 1.5px 1.5px 0 $color, -1.5px -1.5px 0 $color, -1.5px -1.5px 0 $color, -1.5px 1.5px 0 $color,
        1.5px -1.5px 0 $color;
}

// Define the colors
$pink: #e91e63;
$yellow: #ca8a00;
$white: #fff;
$black: #1e232b;

.contactContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    align-content: center;
    opacity: 0;

    @media only screen and (max-width: 600px) {
        width: 90%;
        margin: auto;
    }

    .buttonSubmit {
        height: fit-content;
        width: fit-content;
        background: transparent;
        border: 0;
    }

    span {
        color: white;
        font-family: "Lato";
        text-align: center;
        font-size: 1.3em;
    }

    .headingWrapper {
        text-align: center;
        background-color: transparent;
        padding: 10px;
        width: fit-content;
    }

    form {
        width: 100%;
    }

    .formContainer {
        width: 100%;
        .inputs {
            display: flex;
            justify-content: space-between;
            align-items: center;
            align-content: center;
            width: 100%;
            
            @media only screen and (max-width: 600px) {
                flex-direction: column;
                justify-content: center;
            }
        }
        .question {
            position: relative;
            display: flex;
            align-content: flex-start;
            align-items: flex-start;
            flex-direction: column;
            justify-content: center;
            padding: 1em 0;

            @media only screen and (max-width: 600px) {
                padding: .2em 0;
                width: 100%;
                align-content: center;
                align-items: center;
            }

            input {
                padding: 0.5em 1em;
                font-size: 1em;
                font-family: "Lato";
                background-color: rgba(255,255,255,0.2);
                border: 0;
                border-radius: 5px;
                color: $yellow;

                @media only screen and (max-width: 600px) {
                    width: 80%;
                }
            }

            input:focus {
                outline: none;
            }

            label {
                color: rgba(255, 255, 255);
                margin: 0.5em 0;
                transition: all .2s;
            }

            textarea {
                width: 100%;
                height: 6em;
                padding: 0.5em 1em;
                font-size: 1em;
                font-family: "Lato";
                background-color: rgba(255,255,255,0.2);
                border: 0;
                border-radius: 5px;
                color: $yellow;

                @media only screen and (max-width: 600px) {
                    width: 90%;
                    padding: .2em 0;
                }
            }

            textarea:focus {
                outline: none;
            }
        }

        .question:focus-within label {
            color: $yellow;
        }
    }

    // default header class â€“ used on all examples
    .header {
        text-align: center;
        font-family: "Poppins";
        font-weight: 600;
        font-size: 6em;
        color: $white;
        transition: all 400ms ease-in-out;
        margin: 0;

        @media only screen and (max-width: 600px) {
            font-size: 4em;
        }
    }

    // raising text from page when hovered, so flipped state to header--pushDown class
    .header--raiseUp {
        font-size: 6em;

        @media only screen and (max-width: 600px) {
            font-size: 4em;
        }

        &:hover {
            transform: translate(-9px, -9px);
            @include shade(text, #aaa, #333, 10, 135deg, true);
        }
    }

    //Brighter colored text
    .color-bright {
        & .header {
            color: $black;
            @include outline($yellow);
            cursor: default;
        }

        //raise up text
        & .header--raiseUp:hover {
            @include shade(text, $yellow, #fff, 10, 135deg, true);
        }
    }

    .button {
        position: relative;
    }

    .button span {
        color: white;
        font-family: "Lato";
        font-weight: bold;
        text-align: center;
        text-decoration: none;
        background-color: $yellow;
        display: block;
        position: relative;
        font-size: 1.5em;
        padding: 0.5em 1em;
        opacity: 0;
        width: fit-content;
        margin: auto;
        margin-top: .5em;
        cursor: pointer;

        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        text-shadow: 0px 1px 0px #000;
        filter: dropshadow(color=#000, offx=0px, offy=1px);

        box-shadow: inset 0 1px 0 $white, 0 10px 0 $black;
        border-radius: 5px;
    }

    .button span:active {
        top: 10px;
        background-color: $yellow;
        box-shadow: inset 0 1px 0 $white, inset 0 -3px 0 $black;
    }

    .button:after {
        content: "";
        height: 100%;
        width: 100%;
        padding: 4px;
        position: absolute;
        bottom: -15px;
        left: -4px;
        z-index: -1;
        background-color: #1e232b;
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        border-radius: 5px;
    }

    .button.animated span {
        animation: slide-div-from-left 0.5s forwards;
    }

    .button.animated {
        animation: none;
    }
}

.contactContainer.animated {
    animation: shopUpTitleContact 0.5s cubic-bezier(0.74, 0.06, 0.4, 0.92) forwards;
}

@keyframes shopUpTitleContact {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}
